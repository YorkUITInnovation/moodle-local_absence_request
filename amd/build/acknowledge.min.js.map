{"version":3,"file":"acknowledge.min.js","sources":["../src/acknowledge.js"],"sourcesContent":["/**\n * Absence Request Acknowledge JavaScript\n * Handles individual and bulk acknowledgment of absence requests\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\n/**\n * AbsenceAcknowledge class for handling acknowledgment functionality\n */\nclass AbsenceAcknowledge {\n\n    /**\n     * Initialize the acknowledge functionality\n     */\n    init() {\n        this.bindEvents();\n    }\n\n    /**\n     * Bind event handlers\n     */\n    bindEvents() {\n        // Individual acknowledge toggle\n        document.addEventListener('click', (e) => {\n            if (e.target.classList.contains('local-absence-request-acknowledge')) {\n                e.preventDefault();\n                const id = e.target.getAttribute('data-id');\n                this.toggleAcknowledge(id, e.target);\n            }\n        });\n\n        // Select all checkbox functionality\n        document.addEventListener('change', (e) => {\n            if (e.target.id === 'select_all_absences') {\n                const isChecked = e.target.checked;\n                const checkboxes = document.querySelectorAll('.absence-checkbox');\n                checkboxes.forEach(checkbox => {\n                    checkbox.checked = isChecked;\n                });\n                this.updateBulkButton();\n            }\n        });\n\n        // Individual checkbox change\n        document.addEventListener('change', (e) => {\n            if (e.target.classList.contains('absence-checkbox')) {\n                this.updateSelectAllState();\n                this.updateBulkButton();\n            }\n        });\n\n        // Bulk acknowledge button\n        document.addEventListener('click', (e) => {\n            if (e.target.id === 'bulk_acknowledge_btn') {\n                e.preventDefault();\n                this.bulkAcknowledge();\n            }\n        });\n    }\n\n    /**\n     * Toggle individual acknowledgment status\n     * @param {number} id The absence request ID\n     * @param {HTMLElement} element The DOM element that was clicked\n     */\n    toggleAcknowledge(id, element) {\n        const isAcknowledged = element.classList.contains('fa-check');\n        const newStatus = isAcknowledged ? 0 : 1;\n\n        Ajax.call([{\n            methodname: 'local_absence_request_acknowledge_request',\n            args: {\n                id: parseInt(id),\n                acknowledged: newStatus\n            }\n        }])[0].done((response) => {\n            if (response.success) {\n                this.updateAcknowledgeIcon(element, newStatus);\n                // Update the corresponding checkbox\n                const checkbox = document.querySelector(`.absence-checkbox[data-id=\"${id}\"]`);\n                if (checkbox) {\n                    checkbox.checked = newStatus === 1;\n                }\n                this.updateSelectAllState();\n                this.updateBulkButton();\n            } else {\n                Notification.addNotification({\n                    message: response.message || 'Error updating acknowledgment',\n                    type: 'error'\n                });\n            }\n        }).fail((error) => {\n            console.error('AJAX Error:', error);\n            Notification.addNotification({\n                message: 'Error communicating with server: ' + (error.message || 'Unknown error'),\n                type: 'error'\n            });\n        });\n    }\n\n    /**\n     * Bulk acknowledge selected items\n     */\n    bulkAcknowledge() {\n        const selectedIds = [];\n        const checkedBoxes = document.querySelectorAll('.absence-checkbox:checked');\n\n        checkedBoxes.forEach(checkbox => {\n            selectedIds.push(parseInt(checkbox.getAttribute('data-id')));\n        });\n\n        if (selectedIds.length === 0) {\n            Notification.addNotification({\n                message: 'Please select at least one absence request to acknowledge',\n                type: 'warning'\n            });\n            return;\n        }\n\n        Ajax.call([{\n            methodname: 'local_absence_request_bulk_acknowledge',\n            args: {\n                ids: selectedIds\n            }\n        }])[0].done((response) => {\n            if (response.success) {\n                // Update all icons for acknowledged items\n                selectedIds.forEach(id => {\n                    const icon = document.querySelector(`.local-absence-request-acknowledge[data-id=\"${id}\"]`);\n                    if (icon) {\n                        this.updateAcknowledgeIcon(icon, 1);\n                    }\n                });\n\n                this.updateSelectAllState();\n                this.updateBulkButton();\n\n                Notification.addNotification({\n                    message: `Successfully acknowledged ${selectedIds.length} absence request(s)`,\n                    type: 'success'\n                });\n            } else {\n                Notification.addNotification({\n                    message: response.message || 'Error acknowledging requests',\n                    type: 'error'\n                });\n            }\n        }).fail((error) => {\n            console.error('AJAX Error:', error);\n            Notification.addNotification({\n                message: 'Error communicating with server: ' + (error.message || 'Unknown error'),\n                type: 'error'\n            });\n        });\n    }\n\n    /**\n     * Update the acknowledge icon appearance\n     * @param {HTMLElement} element The DOM element to update\n     * @param {number} acknowledged The acknowledgment status (0 or 1)\n     */\n    updateAcknowledgeIcon(element, acknowledged) {\n        if (acknowledged === 1) {\n            element.classList.remove('fa-times');\n            element.classList.add('fa-check');\n            element.style.color = 'green';\n            element.setAttribute('title', 'Acknowledged - Click to toggle');\n        } else {\n            element.classList.remove('fa-check');\n            element.classList.add('fa-times');\n            element.style.color = 'red';\n            element.setAttribute('title', 'Not acknowledged - Click to toggle');\n        }\n    }\n\n    /**\n     * Update the select all checkbox state based on individual checkboxes\n     */\n    updateSelectAllState() {\n        const allCheckboxes = document.querySelectorAll('.absence-checkbox');\n        const checkedCheckboxes = document.querySelectorAll('.absence-checkbox:checked');\n\n        if (allCheckboxes.length === 0) {\n            return;\n        }\n\n        const selectAllCheckbox = document.getElementById('select_all_absences');\n        if (!selectAllCheckbox) {\n            return;\n        }\n\n        if (checkedCheckboxes.length === 0) {\n            selectAllCheckbox.checked = false;\n            selectAllCheckbox.indeterminate = false;\n        } else if (checkedCheckboxes.length === allCheckboxes.length) {\n            selectAllCheckbox.checked = true;\n            selectAllCheckbox.indeterminate = false;\n        } else {\n            selectAllCheckbox.checked = false;\n            selectAllCheckbox.indeterminate = true;\n        }\n    }\n\n    /**\n     * Update bulk acknowledge button visibility and state\n     */\n    updateBulkButton() {\n        const checkedCheckboxes = document.querySelectorAll('.absence-checkbox:checked');\n        const checkedCount = checkedCheckboxes.length;\n        const container = document.getElementById('bulk-acknowledge-container');\n        const countSpan = document.getElementById('selected_count');\n\n        if (container) {\n            if (checkedCount > 0) {\n                // Show the container and update count\n                container.style.display = '';\n                if (countSpan) {\n                    countSpan.textContent = checkedCount;\n                }\n            } else {\n                // Hide the container when no items selected\n                container.style.display = 'none';\n            }\n        }\n    }\n}\n\nconst absenceAcknowledge = new AbsenceAcknowledge();\n\nexport default {\n    init: () => absenceAcknowledge.init()\n};\n"],"names":["absenceAcknowledge","init","bindEvents","document","addEventListener","e","target","classList","contains","preventDefault","id","getAttribute","toggleAcknowledge","isChecked","checked","querySelectorAll","forEach","checkbox","updateBulkButton","updateSelectAllState","bulkAcknowledge","element","newStatus","call","methodname","args","parseInt","acknowledged","done","response","success","updateAcknowledgeIcon","querySelector","addNotification","message","type","fail","error","console","selectedIds","push","length","ids","icon","remove","add","style","color","setAttribute","allCheckboxes","checkedCheckboxes","selectAllCheckbox","getElementById","indeterminate","checkedCount","container","countSpan","display","textContent"],"mappings":"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"}