{"version":3,"file":"acknowledge.min.js","sources":["../src/acknowledge.js"],"sourcesContent":["import Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\n/**\n * Initialize the acknowledge functionality\n */\nexport const init = () => {\n    // Add event listener for acknowledge clicks using event delegation\n    document.addEventListener('click', (event) => {\n        // Check if clicked element has the acknowledge class\n        if (event.target.classList.contains('local-absence-request-acknowledge')) {\n            handleAcknowledgeClick(event.target);\n        }\n    });\n};\n\n/**\n * Handle click on acknowledge element\n * @param {Element} element The clicked element\n */\nconst handleAcknowledgeClick = (element) => {\n    const id = element.getAttribute('data-id');\n\n    if (!id) {\n        Notification.addNotification({\n            message: 'Invalid record ID',\n            type: 'error'\n        });\n        return;\n    }\n\n    // Make AJAX call to acknowledge webservice\n    Ajax.call([{\n        methodname: 'local_absence_request_acknowledge',\n        args: {\n            id: parseInt(id)\n        }\n    }])[0].then((response) => {\n        if (response.success) {\n            updateAcknowledgeIcon(element, response.acknowledged);\n        } else {\n            Notification.addNotification({\n                message: 'Failed to update acknowledgment status',\n                type: 'error'\n            });\n        }\n    }).catch((error) => {\n        Notification.addNotification({\n            message: 'Error updating acknowledgment: ' + error.message,\n            type: 'error'\n        });\n    });\n};\n\n/**\n * Update the acknowledge icon based on the acknowledged value\n * @param {Element} element The element to update\n * @param {number} acknowledged The acknowledged status (0 or 1)\n */\nconst updateAcknowledgeIcon = (element, acknowledged) => {\n    // Remove existing FontAwesome classes\n    element.classList.remove('fa-check', 'fa-times');\n\n    if (acknowledged === 1) {\n        // Set to green checkmark\n        element.classList.add('fa-check');\n        element.style.color = 'green';\n        element.setAttribute('title', 'Acknowledged - Click to toggle');\n    } else {\n        // Set to red X\n        element.classList.add('fa-times');\n        element.style.color = 'red';\n        element.setAttribute('title', 'Not acknowledged - Click to toggle');\n    }\n};\n"],"names":["document","addEventListener","event","target","classList","contains","handleAcknowledgeClick","element","id","getAttribute","call","methodname","args","parseInt","then","response","success","updateAcknowledgeIcon","acknowledged","addNotification","message","type","catch","error","remove","add","style","color","setAttribute"],"mappings":"oYAMoB,KAEhBA,SAASC,iBAAiB,SAAUC,QAE5BA,MAAMC,OAAOC,UAAUC,SAAS,sCAChCC,uBAAuBJ,MAAMC,kBASnCG,uBAA0BC,gBACtBC,GAAKD,QAAQE,aAAa,WAE3BD,iBASAE,KAAK,CAAC,CACPC,WAAY,oCACZC,KAAM,CACFJ,GAAIK,SAASL,QAEjB,GAAGM,MAAMC,WACLA,SAASC,QACTC,sBAAsBV,QAASQ,SAASG,oCAE3BC,gBAAgB,CACzBC,QAAS,yCACTC,KAAM,aAGfC,OAAOC,8BACOJ,gBAAgB,CACzBC,QAAS,kCAAoCG,MAAMH,QACnDC,KAAM,mCAzBGF,gBAAgB,CACzBC,QAAS,oBACTC,KAAM,WAiCZJ,sBAAwB,CAACV,QAASW,gBAEpCX,QAAQH,UAAUoB,OAAO,WAAY,YAEhB,IAAjBN,cAEAX,QAAQH,UAAUqB,IAAI,YACtBlB,QAAQmB,MAAMC,MAAQ,QACtBpB,QAAQqB,aAAa,QAAS,oCAG9BrB,QAAQH,UAAUqB,IAAI,YACtBlB,QAAQmB,MAAMC,MAAQ,MACtBpB,QAAQqB,aAAa,QAAS"}